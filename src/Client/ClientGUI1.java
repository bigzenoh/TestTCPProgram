package Client;/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

import javax.swing.table.DefaultTableModel;
import java.io.DataInputStream;
import java.io.IOException;
import java.net.Socket;
import java.util.ArrayList;

/**
 *
 * @author DonQuixote
 */
public class ClientGUI1 extends javax.swing.JFrame {

    /**
     * Creates new form NewJFrame
     */
    public ClientGUI1() {
        initComponents();
        this.setLocation(380,200);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        contentPane = new javax.swing.JPanel();
        startPanel = new javax.swing.JPanel();
        nameInput = new javax.swing.JTextField();
        numberOfResourceInput = new javax.swing.JTextField();
        numberOfTaskInput = new javax.swing.JTextField();
        joinBtn = new javax.swing.JButton();
        startBtn = new javax.swing.JButton();
        mainPanel = new javax.swing.JPanel();
        btn1 = new javax.swing.JButton();
        btn2 = new javax.swing.JButton();
        btn3 = new javax.swing.JButton();
        btn4 = new javax.swing.JButton();
        btn5 = new javax.swing.JButton();
        btn6 = new javax.swing.JButton();
        btn7 = new javax.swing.JButton();
        btn8 = new javax.swing.JButton();
        btn9 = new javax.swing.JButton();
        btn10 = new javax.swing.JButton();
        estimatingTaskLabel = new javax.swing.JLabel();
        jButton11 = new javax.swing.JButton();
        jButton12 = new javax.swing.JButton();
        remainingTaskLabel = new javax.swing.JLabel();
        scorePanel = new javax.swing.JPanel();
        scoreLabel = new javax.swing.JLabel();
        submitBtn = new javax.swing.JButton();
        resultPanel = new javax.swing.JScrollPane();
        resultTable = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        startPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        nameInput.setText("Your Name");


        numberOfResourceInput.setText("Number Of Resources");


        numberOfTaskInput.setText("Number Of Task");


        joinBtn.setText("Join Room!");
        joinBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                joinBtnActionPerformed(evt);
            }
        });

        startBtn.setText("Start Room!");
        startBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout startPanelLayout = new javax.swing.GroupLayout(startPanel);
        startPanel.setLayout(startPanelLayout);
        startPanelLayout.setHorizontalGroup(
                startPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(startPanelLayout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(startPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(numberOfTaskInput)
                                        .addComponent(nameInput)
                                        .addComponent(numberOfResourceInput, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(startPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(startBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(joinBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addContainerGap(20, Short.MAX_VALUE))
        );
        startPanelLayout.setVerticalGroup(
                startPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, startPanelLayout.createSequentialGroup()
                                .addGroup(startPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addGroup(startPanelLayout.createSequentialGroup()
                                                .addGap(0, 0, Short.MAX_VALUE)
                                                .addComponent(joinBtn))
                                        .addGroup(startPanelLayout.createSequentialGroup()
                                                .addGroup(startPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                        .addComponent(nameInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(startBtn))
                                                .addGap(3, 3, 3)
                                                .addComponent(numberOfResourceInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 10, Short.MAX_VALUE)
                                                .addComponent(numberOfTaskInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addContainerGap())
        );

        btn1.setText("1");
        btn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn1ActionPerformed(evt);
            }
        });

        btn2.setText("2");
        btn2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn2ActionPerformed(evt);
            }
        });

        btn3.setText("3");
        btn3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn3ActionPerformed(evt);
            }
        });

        btn4.setText("5");
        btn4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn4ActionPerformed(evt);
            }
        });

        btn5.setText("8");
        btn5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn5ActionPerformed(evt);
            }
        });

        btn6.setText("15");
        btn6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn6ActionPerformed(evt);
            }
        });

        btn7.setText("20");
        btn7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn7ActionPerformed(evt);
            }
        });

        btn8.setText("35");
        btn8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn8ActionPerformed(evt);
            }
        });

        btn9.setText("60");
        btn9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn9ActionPerformed(evt);
            }
        });

        btn10.setText("100");
        btn10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn10ActionPerformed(evt);
            }
        });

        estimatingTaskLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        estimatingTaskLabel.setText("Estimating task:          ");

        jButton11.setText("?");

        jButton12.setText("Coffee");
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton12ActionPerformed(evt);
            }
        });

        remainingTaskLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        remainingTaskLabel.setText("Remaining task:          ");

        javax.swing.GroupLayout mainPanelLayout = new javax.swing.GroupLayout(mainPanel);
        mainPanel.setLayout(mainPanelLayout);
        mainPanelLayout.setHorizontalGroup(
                mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(mainPanelLayout.createSequentialGroup()
                                .addGap(19, 19, 19)
                                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(mainPanelLayout.createSequentialGroup()
                                                .addComponent(jButton11, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jButton12, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                .addGroup(mainPanelLayout.createSequentialGroup()
                                                        .addComponent(estimatingTaskLabel)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                        .addComponent(remainingTaskLabel))
                                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, mainPanelLayout.createSequentialGroup()
                                                        .addComponent(btn1, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                        .addComponent(btn2, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                        .addComponent(btn3, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                        .addComponent(btn4, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                        .addComponent(btn5, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                        .addComponent(btn6, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                        .addComponent(btn7, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                        .addComponent(btn8, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                        .addComponent(btn9, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                        .addComponent(btn10, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addContainerGap(21, Short.MAX_VALUE))
        );
        mainPanelLayout.setVerticalGroup(
                mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(mainPanelLayout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(remainingTaskLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(estimatingTaskLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(btn1)
                                        .addComponent(btn2)
                                        .addComponent(btn3)
                                        .addComponent(btn4)
                                        .addComponent(btn5)
                                        .addComponent(btn6)
                                        .addComponent(btn7)
                                        .addComponent(btn8)
                                        .addComponent(btn9)
                                        .addComponent(btn10))
                                .addGap(14, 14, 14)
                                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jButton11)
                                        .addComponent(jButton12))
                                .addContainerGap())
        );

        scorePanel.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));

        scoreLabel.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        scoreLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        scoreLabel.setText("Score");

        submitBtn.setText("Submit");
        submitBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout scorePanelLayout = new javax.swing.GroupLayout(scorePanel);
        scorePanel.setLayout(scorePanelLayout);
        scorePanelLayout.setHorizontalGroup(
                scorePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(scorePanelLayout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(scoreLabel)
                                .addGap(18, 18, 18)
                                .addComponent(submitBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        scorePanelLayout.setVerticalGroup(
                scorePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, scorePanelLayout.createSequentialGroup()
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(scorePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(scoreLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(submitBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(28, 28, 28))
        );

        resultTable.setAutoCreateRowSorter(true);
        resultTable.setBorder(javax.swing.BorderFactory.createCompoundBorder());
        resultTable.setModel(new javax.swing.table.DefaultTableModel(
                new Object [][] {
//                        {null, null, null, null},
//                        {null, null, null, null},
//                        {null, null, null, null},
//                        {null, null, null, null}
                },
                new String [] {
                        "Task", "Your Estimate", "Everyone's Estimate", "Compare"
                }
        ) {
            Class[] types = new Class [] {
                    java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                    false, false, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        resultTable.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        resultTable.setEnabled(false);
        resultPanel.setViewportView(resultTable);
        if (resultTable.getColumnModel().getColumnCount() > 0) {
            resultTable.getColumnModel().getColumn(0).setResizable(false);
            resultTable.getColumnModel().getColumn(1).setResizable(false);
            resultTable.getColumnModel().getColumn(2).setResizable(false);
            resultTable.getColumnModel().getColumn(3).setResizable(false);
        }

        javax.swing.GroupLayout contentPaneLayout = new javax.swing.GroupLayout(contentPane);
        contentPane.setLayout(contentPaneLayout);
        contentPaneLayout.setHorizontalGroup(
                contentPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(contentPaneLayout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(contentPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(mainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(resultPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 667, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(contentPaneLayout.createSequentialGroup()
                                                .addComponent(startPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(scorePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(68, 68, 68))))
        );
        contentPaneLayout.setVerticalGroup(
                contentPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(contentPaneLayout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(contentPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(startPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(scorePanel, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 10, Short.MAX_VALUE)
                                .addComponent(mainPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(resultPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(52, Short.MAX_VALUE))
        );

        resultPanel.getAccessibleContext().setAccessibleParent(numberOfResourceInput);

        jScrollPane2.setViewportView(contentPane);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 713, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 434, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>

    private void submitBtnActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
        submitBtn.setEnabled(false);
        client.sendToServer("ok,"+YourID+"."+scoreLabel.getText());
    }

    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
    }

    private void btn10ActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
        scoreLabel.setText("100");
    }

    private void btn9ActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
        scoreLabel.setText("60");
    }

    private void btn8ActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
        scoreLabel.setText("35");
    }

    private void btn7ActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
        scoreLabel.setText("20");
    }

    private void btn6ActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
        scoreLabel.setText("15");
    }

    private void btn5ActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
        scoreLabel.setText("8");
    }

    private void btn4ActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
        scoreLabel.setText("5");
    }

    private void btn3ActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
        scoreLabel.setText("3");
    }

    private void btn2ActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
        scoreLabel.setText("2");
    }

    private void btn1ActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
        scoreLabel.setText("1");
    }

    private void joinBtnActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
        YourName = nameInput.getText();
        client = new Client(this, YourName);
        client.start();
        client.sendToServer("Hello,"+YourName+"."+1+"|"+1); // vì phần đằng sau ko có tác dụng khi join nên để mặc định 1,1
        System.out.println("sent Hello -> "+YourName+"."+1+"|"+1);
        //t?o lu?ng nh?n d? li?u
        ClientGUI1.ReceivingThread t = new ClientGUI1.ReceivingThread(client.getClientSocket(), this);
        t.start();
        //xoá nút start
        joinBtn.setEnabled(false);
        startBtn.setEnabled(false);
    }

    private void startBtnActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
        try{
            numberOfResource = Integer.parseInt(numberOfResourceInput.getText());
            numberOfTask = Integer.parseInt(numberOfTaskInput.getText());
            YourName = nameInput.getText();
            client = new Client(this, YourName);
            client.start();
            client.sendToServer("Hello,"+YourName+"."+numberOfResource+"|"+numberOfTask);
            System.out.println("sent Hello -> "+YourName+"."+numberOfResource+"|"+numberOfTask);
            //t?o lu?ng nh?n d? li?u
            ClientGUI1.ReceivingThread t = new ClientGUI1.ReceivingThread(client.getClientSocket(), this);
            t.start();
            //xoá nút start
            joinBtn.setEnabled(false);
            startBtn.setEnabled(false);
        } catch (Exception e){

        }
    }


    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ClientGUI1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ClientGUI1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ClientGUI1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ClientGUI1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ClientGUI1().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify
    private javax.swing.JButton btn1;
    private javax.swing.JButton btn10;
    private javax.swing.JButton btn2;
    private javax.swing.JButton btn3;
    private javax.swing.JButton btn4;
    private javax.swing.JButton btn5;
    private javax.swing.JButton btn6;
    private javax.swing.JButton btn7;
    private javax.swing.JButton btn8;
    private javax.swing.JButton btn9;
    private javax.swing.JPanel contentPane;
    private javax.swing.JLabel estimatingTaskLabel;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton joinBtn;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JTextField nameInput;
    private javax.swing.JTextField numberOfResourceInput;
    private javax.swing.JTextField numberOfTaskInput;
    private javax.swing.JLabel remainingTaskLabel;
    private javax.swing.JScrollPane resultPanel;
    private javax.swing.JTable resultTable;
    private javax.swing.JLabel scoreLabel;
    private javax.swing.JPanel scorePanel;
    private javax.swing.JPanel startPanel;
    private javax.swing.JButton submitBtn;
    private javax.swing.JButton startBtn;
    // End of variables declaration
    //Custom variables
    Client client;
    String YourName;
    int YourID;
    ArrayList<ArrayList<String>> MainData = new ArrayList<ArrayList<String>>();
    int numberOfResource, numberOfTask, taskEstimating=0;

    // Custom function
    public Object[] resultRow(){
        int everyOneEstm = 0;
        String compare;
        for (int i=0;i<MainData.size();i++){
            everyOneEstm+=Integer.parseInt(MainData.get(i).get(taskEstimating));
        }
        everyOneEstm/=MainData.size();

        if(Integer.parseInt(MainData.get(YourID).get(taskEstimating))-everyOneEstm<10){
            compare="GOOD";
        } else {
            compare="HMM";
        }

        Object[] obj = new Object[]{taskEstimating,MainData.get(YourID).get(taskEstimating),everyOneEstm,compare};
        return obj;
    }
    ///////////////////////////////////////////////RECEVING CLASS
    public static class ReceivingThread extends Thread {

        Socket clientSocket;
        ClientGUI1 clientGUI1;
        DataInputStream reader;

        public ReceivingThread(Socket socket, ClientGUI1 clientGUI1) {
            this.clientSocket = socket;
            this.clientGUI1 = clientGUI1;
            try {
                reader = new DataInputStream(clientSocket.getInputStream());
            } catch (IOException ex) {
                ex.printStackTrace();
            }
        }

        public void run() {
            System.out.println("start receive");
            while (true) {
                System.out.println("ClientGUI.ClientRecivingThread.run()");
                String sentence = "";
                try {
                    sentence = reader.readUTF();
                    System.out.println("from Server: " + sentence);
                    //chạy lệnh điều khiển khi nhận được gói tin
                    if (sentence.startsWith("ok")) {
                        //nhận thông tin vote của từng người
                        int pos1 = sentence.indexOf(",");
                        int pos2 = sentence.indexOf(".");
                        int id = Integer.parseInt(sentence.substring(pos1+1,pos2));
                        String value = sentence.substring(pos2+1,sentence.length());
                        clientGUI1.MainData.get(id).add(value);
//                        setTaskLabel(clientGUI.TaskLabel, clientGUI.TaskEstimating);
                    } else if (sentence.startsWith("new")) {
                        //add them thanh vien moi vao mang du lieu chinh
                        int pos = sentence.indexOf(",");
                        String name = sentence.substring(pos+1,sentence.length());

                        clientGUI1.MainData.add(new ArrayList<String>());
                        clientGUI1.MainData.get(clientGUI1.MainData.size()-1).add(name);
                    } else if (sentence.startsWith("AddYourself")) {
                        //add chinh minh vao mang du lieu chinh
                        clientGUI1.MainData.add(new ArrayList<String>());
                        clientGUI1.MainData.get(clientGUI1.MainData.size()-1).add(clientGUI1.YourName);
                        for(int i=0;i<clientGUI1.MainData.size();i++) {
                            System.out.println(clientGUI1.MainData.get(i).get(0));
                        }
                        clientGUI1.YourID = clientGUI1.MainData.size()-1;
                    } else if (sentence.startsWith("NextTask")) {
                        //test
                        DefaultTableModel model = (DefaultTableModel) clientGUI1.resultTable.getModel();
                        model.addRow(clientGUI1.resultRow());

                        clientGUI1.taskEstimating++;
                        clientGUI1.estimatingTaskLabel.setText("Estimating task: "+clientGUI1.taskEstimating);
                        clientGUI1.submitBtn.setEnabled(true);



                    } else if (sentence.startsWith("Start")){
                        clientGUI1.taskEstimating++;
                        clientGUI1.estimatingTaskLabel.setText("Estimating task: "+clientGUI1.taskEstimating);
                        clientGUI1.submitBtn.setEnabled(true);
                    } else if (sentence.startsWith("End")) {
                        for(int i=0;i<clientGUI1.MainData.size();i++){
                            for(int j=0;j<clientGUI1.MainData.get(0).size();j++){
                                System.out.print(clientGUI1.MainData.get(i).get(j)+" - ");
                            }
                            System.out.println(" ");
                        }
                        DefaultTableModel model = (DefaultTableModel) clientGUI1.resultTable.getModel();
                        model.addRow(clientGUI1.resultRow());
                    }
                } catch (IOException ex) {
                    ex.printStackTrace();
                }
                yield();
            }
        }
    }
}
